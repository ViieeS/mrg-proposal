import React, { useState } from "react";

import AppContainer from "./AppContainer";
import ArrowDown from "./ArrowDown";
import checkAnswer from "./checkAnswer";
import { Congratulations } from "./Congratulations";
import {
  ANSWER_DELAY_MS,
  INTRO_DELAY_MS,
  OUTCOMES_DELAY_MS,
  PROPOSAL_DELAY_MS,
} from "./constatns";
import DelayedBlock from "./DelayedBlock";
import DelayedFadeInBlock from "./DelayedFadeInBlock";
import FlowchartContainer from "./FlowchartContainer";
import IconButton from "./IconButton";
import InlineInput from "./InlineInput";
import InlineInputContainer from "./InlineInputContainer";
import OutcomeBox from "./OutcomeBox";
import OutcomeBranch from "./OutcomeBranch";
import OutcomesContainer from "./OutcomesContainer";
import PaperPlaneIcon from "./PaperPlaneIcon";
import ProposalBox from "./ProposalBox";
import Typewriter from "./Typewriter";
import VerticalLine from "./VerticalLine";

const MarriageProposalFlowchart: React.FC = () => {
  const [userInput, setUserInput] = useState("");
  const [showMeme, setShowMeme] = useState(false);

  const handleConfirm = () => {
    if (checkAnswer(userInput)) {
      setShowMeme(true);
    } else {
      alert('‚õî –ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ "–¥–∞" –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è!');
    }
  };

  if (showMeme) {
    return <Congratulations />;
  }

  return (
    <>
      <AppContainer>
        <FlowchartContainer>
          <DelayedFadeInBlock delayMs={INTRO_DELAY_MS}>
            <p style={{ fontStyle: "italic" }}>
              –ú—ã –ø—Ä–æ—à–ª–∏ —Ç—ã—Å—è—á–∏ –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤ –Ω–∞–≤—Å—Ç—Ä–µ—á—É –¥—Ä—É–≥ –¥—Ä—É–≥—É, –∏ —è —Ö–æ—á—É
              –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —ç—Ç–æ—Ç –ø—É—Ç—å –≤–º–µ—Å—Ç–µ —Å —Ç–æ–±–æ–π. –î–∞–≤–∞–π –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –Ω–∞—à—É –∂–∏–∑–Ω—å –≤
              –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ!
            </p>
          </DelayedFadeInBlock>

          <DelayedBlock delayMs={PROPOSAL_DELAY_MS}>
            <ProposalBox>
              <Typewriter text="–í–∏–∫—É—Å—è, —Ç—ã –≤—ã–π–¥–µ—à—å –∑–∞ –º–µ–Ω—è?" speed={40} />
            </ProposalBox>
          </DelayedBlock>

          <DelayedFadeInBlock delayMs={OUTCOMES_DELAY_MS}>
            <OutcomesContainer>
              <OutcomeBranch>
                {/* Yes branch */}
                <VerticalLine />
                <div>–î–∞</div>
                <ArrowDown />
                <OutcomeBox>
                  <div>üéâ üíñ üèñÔ∏è</div>
                  <div>üòΩ üë©‚Äç‚ù§Ô∏è‚Äçüë® üéÇ</div>
                </OutcomeBox>
              </OutcomeBranch>

              <OutcomeBranch>
                {/* No branch */}
                <VerticalLine />
                <div>–ù–µ—Ç</div>
                <ArrowDown />
                <OutcomeBox>
                  <div>üò≠ ü•Ä üíî</div>
                  <div>üòî üö∂‚Äç‚ôÇÔ∏è ‚ö∞Ô∏è</div>
                </OutcomeBox>
              </OutcomeBranch>
            </OutcomesContainer>
          </DelayedFadeInBlock>

          <DelayedFadeInBlock delayMs={ANSWER_DELAY_MS}>
            <InlineInputContainer>
              <InlineInput
                type="text"
                placeholder='–í–≤–µ–¥–∏ "–¥–∞" —á—Ç–æ–±—ã –ø—Ä–æ–¥–ª–æ–∂–∏—Ç—å'
                value={userInput}
                onChange={(e) => setUserInput(e.target.value)}
              />
              <IconButton onClick={handleConfirm}>
                <PaperPlaneIcon />
              </IconButton>
            </InlineInputContainer>
          </DelayedFadeInBlock>
        </FlowchartContainer>
      </AppContainer>
    </>
  );
};

export default MarriageProposalFlowchart;
